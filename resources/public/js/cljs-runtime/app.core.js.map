{"version":3,"sources":["app/core.cljs"],"mappings":";AAeA,GAAA,QAAAA,gCAAAC,qCAAAC;AAAA;AAAA,AAAA,AAASC,iBAAM,gDAAA,hDAACC;;AAEhB,gBAAA,hBAAMC;AAAN,AAAA,0FAAA,mDAEG,iBAAAC,qBAAA,AAAAC,gBAAYJ;AAAZ,AAAA,oBAAAG;AAAA,QAAAA,JAASE;AAAT,AACE,IAAMC,OAAK,AAAA,mFAAA,AAAA,mFAAID;AAAf,AAAA,0FAAA,mDAAA,2CAAA,wDAAA,mFAAA,OAAA,WAAA,SAAA,SAAA,WAAA,oCAAA,mFAAA,mDAAA,2CAAA,wDAAA,oFAAA,gBAAA,eAAA,eAAA,eAAA,SAAA,UAAA,SAAA,OAAA,WAAA,kCAAA,mHAAA,gGAAA,hIAiBKE,mHACAD,gGACAE;;AApBP,0FAqBGC;;;;AAMN,AAAKC,kBACH,iDAAA,mFAAA,mFAAA,IAAA,2CAAA,qDAAA,wDAAA,nXAACC,waAEaC,oCACZ,iBAAA,AAAA,mFAAA,OAAA,2CAAA,qDAAA,kDAAA,wFAAA,nVAAMC,gTAEWC;AAErB,0BAAA,1BAAMC,4DAAWC;AAAjB,AACE,OAACC,mDACAjB,eACA,WAAKkB;AAAL,AACE,oBAAMF;AAAN,iLACW,AAAA,kGAAcE,hJACd,AAACC,2JAAsBH,9RAC3B,+DAAA,xDAACI,8CAAMJ;;AAHd;;;;AAKL,8BAAA,9BAAMK;AAAN,AACE,gFAAA,2CAAA,sEAAA,1LAACC,iCAAWZ,gBAAOK;;AAMrB,iBAAA,jBAAuBQ;AAAvB,AACE,wDAAA,jDAACC,oIACCtB,sBACD,wBAAA,xBAACuB;;AAEJ,sBAAA,tBAAMC;AAAN,AACE,AAACL;;AACD,OAACE;;AAEH,AAACG","names":["js/app","js/app.core","js/app.core.match","app.core/match","reagent.core.atom","app.core/main","temp__5751__auto__","cljs.core/deref","m","view","app.views.common/header","app.views.common/footer","app.views.not-found/view","app.core/router","reitit.core.router","app.views.home/view","app.env/DEBUG","app.views.all/view","app.core/navigate!","new-match","cljs.core.swap_BANG_","old-match","reitit.frontend.controllers/apply-controllers","cljs.core.assoc","app.core/start-router!","reitit.frontend.easy/start!","app.core/mount","reagent.dom.render","js/document.getElementById","app.core/init!"],"sourcesContent":["(ns app.core\n  (:require\n   [reagent.core :as r]\n   [reagent.dom :as rdom]\n   [reitit.frontend.controllers :as rfc]\n   [reitit.frontend.easy :as rfe]\n   [reitit.core :as reitit]\n   [app.env :refer [DEBUG]]\n   [app.views.home :as home]\n   [app.views.not-found :as not-found]\n   [app.views.common :refer [header footer]]\n   [app.views.all :as all]))\n\n;; Atom for route matching\n;; see: https://github.com/metosin/reitit/blob/master/examples/frontend/src/frontend/core.cljs\n(defonce match (r/atom nil))\n\n(defn main []\n  [:div\n   (if-let [m @match]\n     (let [view (-> m :data :view)]\n       [:div {:class [\"flex\"\n                      \"flex-col\"\n                      \"h-full\"\n                      \"w-full\"\n                      \"bg-white\"\n                      \"dark:bg-slate-900\"]}\n        [:div {:class [\"xl:w-[1080px]\"\n                       \"lg:w-[980px]\"\n                       \"md:w-[700px]\"\n                       \"sm:w-[600px]\"\n                       \"w-full\"\n                       \"mx-auto\"\n                       \"h-full\"\n                       \"flex\"\n                       \"flex-col\"\n                       \"justify-between\"]}\n         [header]\n         [view]\n         [footer]]])\n     [not-found/view])])\n\n;; -------------------------\n;; Router\n;; -------------------------\n\n(def router\n  (reitit/router\n   [[\"/\" {:name :index\n          :view home/view}]\n    (when DEBUG\n      [\"/all\" {:name :all\n               :view all/view}])]))\n\n(defn navigate! [new-match]\n  (swap!\n   match\n   (fn [old-match]\n     (when new-match\n       (->> (-> (:controllers old-match)\n                (rfc/apply-controllers new-match))\n            (assoc new-match :controllers))))))\n\n(defn start-router! []\n  (rfe/start! router navigate! {:use-fragment true}))\n\n;; -------------------------\n;; Initialize app\n;; -------------------------\n\n(defn ^:dev/after-load mount []\n  (rdom/render\n   [main]\n   (js/document.getElementById \"app\")))\n\n(defn init! []\n  (start-router!)\n  (mount))\n\n(init!)\n"]}